\1. 下载 keepalived 的安装包
\2. tar -zxvf keepalived-2.0.7.tar.gz
\3. 在/data/program/目录下创建一个 keepalived 的文件
\4. cd 到 keepalived-2.0.7 目录下，执行 ./configure -- prefix=/data/program/keepalived --sysconf=/etc
\5. 如果缺少依赖库，则 yum install gcc; yum install openssl-devel ; yum install libnl libnl-devel
\6. 编译安装 make && make install
\7. 进入安装后的路径 cd /data/program/keepalived, 创建软连接: ln -s sbin/keepalived /sbin
 \8. cp /data/program/keepalived-2.0.7/keepalived/etc/init.d/keepalived /etc/init.d
\9. chkconfig --add keepalived \10. chkconfig keepalived on 
\11. service keepalived start
service status keepalived
keepalived 的配置
vim /etc/keepalived/keepalived.conf

master
! Configuration File for keepalived global_defs {
router_id LVS_DEVEL 运行 keepalived 服务器的标识，在一个网络内应该是唯 一的
}
vrrp_instance VI_1 { #vrrp 实例定义部分
stateMASTER #设置lvs的状态，MASTER和BACKUP两种，必须大写 interface ens33 #设置对外服务的接口
virtual_router_id 51 #设置虚拟路由标示，这个标示是一个数字，同一个 vr
rp 实例使用唯一标示
priority 100 #定义优先级，数字越大优先级越高，在一个 vrrp——instance 下，
master 的优先级必须大于 backup
advert_int 1 #设定 master 与 backup 负载均衡器之间同步检查的时间间隔，单
位是秒
authentication { #设置验证类型和密码
        auth_type PASS
auth_pass 1111 #验证密码，同一个 vrrp_instance 下 MASTER 和 BACKU P 密码必须相同
}
virtual_ipaddress { #设置虚拟 ip 地址，可以设置多个，每行一个
        192.168.11.100
    }
}
virtual_server 192.168.11.100 80 { #设置虚拟服务器，需要指定虚拟 ip 和服务 端口
delay_loop 6 #健康检查时间间隔
lb_algo rr #负载均衡调度算法
lb_kind NAT #负载均衡转发规则 persistence_timeout 50 #设置会话保持时间 protocol TCP #指定转发协议类型，有 TCP 和 UDP 两种
real_server 192.168.11.160 80 { #配置服务器节点 1，需要指定 real serve r 的真实 IP 地址和端口
weight 1 #设置权重，数字越大权重越高
 
 TCP_CHECK{ #realserver的状态监测设置部分单位秒 connect_timeout 3 #超时时间 delay_before_retry 3 #重试间隔
connect_port 80 #监测端口
} }
}
backup
! Configuration File for keepalived
global_defs {
   router_id LVS_DEVEL
}
vrrp_instance VI_1 {
    state BACKUP
    interface ens33
    virtual_router_id 51
    priority 50
    advert_int 1
    authentication {
        auth_type PASS
        auth_pass 1111
    }
    virtual_ipaddress {
        192.168.11.100
} }
virtual_server 192.168.11.100 80 {
    delay_loop 6
    lb_algo rr
    lb_kind NAT
    persistence_timeout 50
    protocol TCP
    real_server 192.168.11.161 80 {
        weight 1
        TCP_CHECK {
           connect_timeout 3
           delay_before_retry 3
           connect_port 80
} }
}
 
  keepalived 日志文件配置
\1. 首先看一下/etc/sysconfig/keepalived 文件
vi /etc/sysconfig/keepalived
KEEPALIVED_OPTIONS="-D -d -S 0"
“-D” 就是输出日志的选项
这里的“-S 0”表示 local0.* 具体的还需要看一下/etc/syslog.conf 文件
\2. 在/etc/rsyslog.conf 里添加:local0.* /var/log/keepalived.log \3. 重新启动 keepalived 和 rsyslog 服务:
service rsyslog restart service keepalived restart
通过脚本实现动态切换
\1. 在 master 和 slave 节点的 /data/program/nginx/sbin/nginx-ha-check.sh 目录 下增加一个脚本
–no-headers 不打印头文件
Wc –l
统计行数
#!bin/sh #! /bin/sh 是指此脚本使用/bin/sh 来执行
A=`ps -C nginx --no-header |wc -l`
if [ $A -eq 0 ]
   then
   echo 'nginx server is died'
   service keepalived stop
fi

chmod +x nginx-ha-check.sh
\2. 修改 keepalived.conf 文件，增加如下配置 track_script: #执行监控的服务。 chknginxservice #

 引用 VRRP 脚本，即在 vrrp_script 部分指定的名字。定期运行它们来改变优先级， 并最终引发主备切换。